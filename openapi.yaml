openapi: 3.0.0
info:
  title: Movie Catalog API
  description: API для управления каталогом фильмов
  version: 1.0.0

servers:
  - url: http://localhost/api
    description: Локальный сервер

paths:
  /movies:
    get:
      summary: Получить список всех фильмов
      description: Возвращает массив фильмов с пагинацией
      responses:
        '200':
          description: Список фильмов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMovieListResponse'

    post:
      summary: Создать новый фильм
      description: Создает новый фильм в базе данных
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieInput'
      responses:
        '201':
          description: Фильм успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '422':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /movies/{id}:
    get:
      summary: Получить фильм по ID
      description: Возвращает фильм по его ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID фильма
      responses:
        '200':
          description: Информация о фильме
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '404':
          description: Фильм не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Обновить информацию о фильме
      description: Обновляет информацию о существующем фильме
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID фильма
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieInput'
      responses:
        '200':
          description: Фильм успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        '404':
          description: Фильм не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Удалить фильм
      description: Удаляет фильм по его ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID фильма
      responses:
        '200':
          description: Фильм успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movie deleted successfully"
        '404':
          description: Фильм не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          example: 99
        title:
          type: string
          example: "Dolore eligendi omnis blanditiis molestiae."
        duration:
          type: integer
          example: 84
        release_year:
          type: integer
          example: 1976
        genre:
          type: string
          example: "qui"
        director:
          type: string
          example: "Freeman Schowalter"
        created_at:
          type: string
          format: date-time
          example: "2024-11-15T07:16:41.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-11-15T07:16:41.000000Z"

    MovieResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Movie'

    PaginatedMovieListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        links:
          $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    MovieInput:
      type: object
      properties:
        title:
          type: string
          example: "Inception"
        duration:
          type: integer
          example: 148
        release_year:
          type: integer
          example: 2010
        genre:
          type: string
          example: "Sci-Fi"
        director:
          type: string
          example: "Christopher Nolan"
      required:
        - title
        - duration
        - release_year
        - genre
        - director

    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          example: "http://localhost/api/movies?page=1"
        last:
          type: string
          example: "http://localhost/api/movies?page=1000"
        prev:
          type: string
          nullable: true
          example: null
        next:
          type: string
          nullable: true
          example: "http://localhost/api/movies?page=2"

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1000
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
                example: "http://localhost/api/movies?page=2"
              label:
                type: string
                example: "2"
              active:
                type: boolean
                example: false
        path:
          type: string
          example: "http://localhost/api/movies"
        per_page:
          type: integer
          example: 1
        to:
          type: integer
          example: 1
        total:
          type: integer
          example: 1000

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Resource not found"
